version: "3.9"
services:
  # Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of 64 validators.
  create-beacon-chain-genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    command:
      - testnet
      - generate-genesis
      - --fork=bellatrix
      - --num-validators=64
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/consensus/config.yml
      - --geth-genesis-json-in=/execution/genesis.json
      - --geth-genesis-json-out=/execution/genesis.json
    volumes:
      - ./consensus:/consensus
      - ./execution:/execution

  # Sets up the genesis configuration for the go-ethereum client from a JSON file.
  geth-genesis:
    image: "ethereum/client-go:v1.11.6"
    command: --datadir=/execution init /execution/genesis.json
    volumes:
      - ./execution:/execution
      - ./execution/genesis.json:/execution/genesis.json
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully

  # Runs the go-ethereum execution client with the specified, unlocked account and necessary
  # APIs to allow for proof-of-stake consensus via Prysm.
  geth:
    container_name: eth_dev_el
    image: "ethereum/client-go:v1.11.6"
    network_mode: host
    command:
      - --networkid=1234
      - --http
      - --http.api=eth,net,web3,miner,personal,txpool,debug,admin
      - --http.addr=0.0.0.0
      - --http.port=14100
      - --http.corsdomain=*
      - --ws
      - --ws.port=14200 
      - --ws.addr=0.0.0.0
      - --port=14300
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/execution/jwtsecret
      - --datadir=/execution
      - --allow-insecure-unlock
      - --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
      - --password=/execution/geth_password.txt
      - --nodiscover
      - --syncmode=full
    depends_on:
      geth-genesis:
        condition: service_completed_successfully
    volumes:
      - ./execution:/execution
      - ./execution/geth_password.txt:/execution/geth_password.txt
      - ./jwtsecret:/execution/jwtsecret

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  beacon-chain:
    container_name: eth_dev_cl
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:v4.0.4"
    network_mode: host
    command:
      - --datadir=/consensus/beacondata
      # No peers to sync with in this testnet, so setting to 0
      - --min-sync-peers=0
      # - --minimum-peers-per-subnet=0 
      - --genesis-state=/consensus/genesis.ssz
      # - --interop-eth1data-votes # dummy 세팅 설정 - deposit정보가 beacon chain 블록에 반영 안되는 문제
      - --bootstrap-node=
      # The chain configuration file used for setting up Prysm
      - --chain-config-file=/consensus/config.yml
      # We specify the chain id used by our execution client
      - --chain-id=1234
      - --rpc-host=0.0.0.0
      - --grpc-gateway-host=0.0.0.0
      - --execution-endpoint=http://0.0.0.0:8551
      - --accept-terms-of-use
      - --jwt-secret=/execution/jwtsecret
      - --suggested-fee-recipient=0x123463a4b065722e99115d6c222f267d9cabb524
      - --minimal-config=true # 실제 동작 확인 불가
      - --contract-deployment-block=1 # 미설정 시 mainnet 블록 넘버를 자동으로 가져와 beacon chain에서 deposit contract의 log를 수집 안함
      - --verbosity=debug
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    volumes:
      - ./consensus:/consensus
      - ./jwtsecret:/execution/jwtsecret

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator:
    container_name: eth_dev_validator1
    image: "gcr.io/prysmaticlabs/prysm/validator:v4.0.4"
    network_mode: host
    command:
      - --beacon-rpc-provider=0.0.0.0:4000
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/consensus/config.yml
      - --minimal-config=true
      - --verbosity=debug
    depends_on:
      beacon-chain:
        condition: service_started
    volumes:
      - ./consensus:/consensus

  validator2:
    container_name: eth_dev_validator2
    image: "gcr.io/prysmaticlabs/prysm/validator:v4.0.4"
    network_mode: host
    command:
      - --beacon-rpc-provider=0.0.0.0:4000
      - --datadir=/consensus/validatordata2
      - --accept-terms-of-use
      - --chain-config-file=/consensus/config.yml
      - --wallet-dir=/consensus/nohdwallet2
      - --wallet-password-file=/consensus/walletpw2.txt
      - --minimal-config=true
      - --verbosity=debug
    depends_on:
      beacon-chain:
        condition: service_started
    volumes:
      - ./consensus:/consensus